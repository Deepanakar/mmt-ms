
pipeline {
   options {
      buildDiscarder (logRotator (numToKeepStr: '5', artifactNumToKeepStr: '5'))
   }

    agent any

    tools {
        maven 'maven_3.9.4'
    }
    stages {
        stage ('Code Compilation') {
            steps {
                echo 'Code Compilation is In Progress!'
                sh 'mvn clean compile'
                echo 'Code Compilation is Completed Successfully!'
			}
		}
        stage ('Code QA Execution') {
            steps {
                echo 'Junit Test case check in Progress!'
				sh 'mvn clean test'
                echo 'Junit Test case check Completed!'
			}
		}
        stage('Sonarqube code quality') {
            environment {
                scannerHome = tool 'SonarQubeScanner'
			}
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh "${scanner Home}/bin/sonar-scanner"
				    sh 'mvn sonar: sonar'
			    }
			    timeout (time: 10, unit: 'MINUTES') {
                    waitForQualityGate abort Pipeline: true
			    }
			}
		}
        stage ('Code Package') {
            steps {
                echo 'creating jar artifact!'
                sh 'mvn clean package'
                echo 'creating jar artifact done'
			}
        }
        stage ('Building & Tag Docker Image') {
            steps {
                echo 'Starting Building Docker Image'
                sh 'docker build -t deeputech/mmt-ms .'
                sh 'docker build -t mmt-ms.'
                echo 'Completed Building Docker Image'
            }
        }
        stage ('Docker Image Scanning') {
            steps {
                echo 'Docker Image Scanning Started'
                sh 'java -version'
                echo 'Docker Image Scanning Started'
            }
        }
        stage ( Docker push to Docker Hub') {
            steps {
               script {
                 withCredentials ([string (credentialsId: 'dockerhubCred', variable: 'dockerhubCred')]) {
                 sh 'docker login docker.io -u deeputech -p $(dockerhubCred}'
                 echo "Push Docker Image to DockerHub: In Progress"
                 sh 'docker push deeputech/mmt-ms: latest'
                 echo "Push Docker Image to DockerHub: In Progress"
                 }
               }
            }
        }
        stage (' Docker Image Push to Amazon ECR') {
            steps {
               script {
                 withDockerRegistry([credentialsId: 'ecr: ap-south-1: ecr-credentials', url:"https://484635853186.dkr.ecr.ap-south-1.amazonaws.com/mmt-ms"]){
                 sh """
                 echo "List the docker images present in local"
                 docker images
                 echo "Tagging the Docker Image: In Progress"
                 docker tag mmt-ms: latest 484635853186.dkr.ecr.ap-south-1.amazonaws.com/mmt-ms:latest
                 echo "Tagging the Docker Image: Completed"
                 echo "Push Docker Image to ECR In Progress"
                 docker push 484635853186.dkr.ecr.ap-south-1.amazonaws.com/mmt-ms:latest
                 echo "Push Docker Image to ECR Completed"
                 """
                 }
               }
            }
        }

    }
}
